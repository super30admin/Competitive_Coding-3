Time complexity-o(n)
space complexity-o(n)

class Solution {
    public int findPairs(int[] nums, int k) {
        if(nums==null || nums.length<2) return 0;
        if(k<0) return 0;
        HashMap<Integer,Integer> hs=new HashMap<Integer,Integer>();
        int count=0;
        for(int i : nums){
            // to add to HashSet
            // compare with i+k an i-k and i -- increment ct
            if(k!=0 && !hs.keySet().contains(i)){
                  if(hs.keySet().contains(i-k)){
                        count++  ; 
                  }
                    if(hs.keySet().contains(i+k)){
                         count++;
                    }   
            }



            hs.put(i,hs.keySet().contains(i)?hs.get(i)+1:1); 
            
            
        }
        if(k==0){
                for(Integer i: hs.keySet()){
            if(hs.get(i)>=2) count++;
            }    
        }

       return count; 
    }
}
