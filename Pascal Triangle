class Solution {
    public List<List<Integer>> generate(int numRows) {
      List<List<Integer>> result = new ArrayList<>();
      List<Integer> row =  new ArrayList();
      row.add(1);
      result.add(row);
        
      if(numRows==1){
          return result;
      }
        
      for(int i=1;i<numRows;i++){
          List<Integer>  preRow =  result.get(i-1);
          row = new ArrayList<>();
          
          row.add(1);
          for(int j=1;j<i;j++){
              row.add(preRow.get(j)+preRow.get(j-1));
          }
          row.add(1);
          result.add(row);
      }
     
      return result;
    }
}

//time :O(n^2)
//space: O(n) except the result

//Approach : array traversal 
//ran successfully in leetcode ----

//IF THERE IS MORE OPTIMAL SOLUTION - PLEASE SHARE
