/*
time O(n^2)
space O(n)
leetcode yes
problem no

for every row after 2 we extract the previous row, iterate till its size and keep adding adjacent elements to generate a new 
element of the next row

*/


class Solution {
    public List<List<Integer>> generate(int numRows) {
        
        List<List<Integer>> sol=new ArrayList<>();
        
        if(numRows<=0)
            return sol;
        
        for(int i=1;i<=numRows;i++)
        {
            
            List<Integer> l=new LinkedList<>();
            if(i==1)
            {   l.add(1);
                sol.add(l);
            
            } 
            
            else if(i==2)
            {
                l.add(1);
                l.add(1);
                sol.add(l);
                
            }
            
            else
            {
                l=sol.get(i-2);
                System.out.println(l);
                List<Integer> temp=new LinkedList<>();
                
                temp.add(1);
                
                for(int j=0;j<l.size()-1;j++)
                {
                    temp.add(l.get(j)+l.get(j+1));
                }
                temp.add(1);
                sol.add(temp);
                
            }
            
        }
        
        return sol;
        
    }
}
